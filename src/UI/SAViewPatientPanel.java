/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Directories.DoctorDirectory;
import Directories.EncounterHistory;
import Directories.HospitalDirectory;
import Directories.PatientDirectory;
import Directories.PersonDirectory;
import Model.Encounter;
import javax.swing.table.DefaultTableModel;
import Model.Patient;
import Model.VitalSigns;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author kashishdesai
 */
public class SAViewPatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form SAViewPatientPanel
     */
    
     DoctorDirectory doctorDirectory;
    EncounterHistory encounterHistory;
    HospitalDirectory hospitalDirectory;
    PatientDirectory patientDirectory;
    PersonDirectory personDirectory;



    public SAViewPatientPanel(DoctorDirectory doctorDirectory, EncounterHistory encounterHistory, HospitalDirectory hospitalDirectory, PatientDirectory patientDirectory, PersonDirectory personDirectory) {
        initComponents();
        this.doctorDirectory = doctorDirectory;
        this.encounterHistory = encounterHistory;
        this.hospitalDirectory = hospitalDirectory;
        this.patientDirectory = patientDirectory;
        this.personDirectory = personDirectory;
        
        populatePatientTable();
        
   
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientView = new javax.swing.JTable();
        btnViewPatient = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtDiagnosis = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtEncounterDate = new com.toedter.calendar.JDateChooser();
        txtPhone = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDateofBirth = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtBodyTemperature = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnUpdatePatient = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatientEncounters = new javax.swing.JTable();
        btnAddEncounters = new javax.swing.JButton();
        btnEncounterUpdate = new javax.swing.JButton();
        txtAddBloodPressure = new javax.swing.JTextField();
        txtAddHeartRate = new javax.swing.JTextField();
        txtAddBodyTemperature = new javax.swing.JTextField();
        txtAddDiagnosis = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAddEncounterDate = new com.toedter.calendar.JDateChooser();
        btnViewEncounters = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        tblPatientView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "City", "Community", "House", "Date of birth", "Gender", "Phone"
            }
        ));
        jScrollPane1.setViewportView(tblPatientView);

        btnViewPatient.setText("View");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });

        btnDeletePatient.setText("Delete");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });

        jLabel12.setText("Body Temperature:");

        txtDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiagnosisActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Diagnosis:");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Name:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Password:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("City:");

        jLabel4.setText("Community:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("House:");

        jLabel6.setText("Date of birth:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Phone:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Gender:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Encounter Date:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Blood Pressure:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Heart Rate:");

        btnUpdatePatient.setText("Update");
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });

        tblPatientEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Encounter Date", "Blood Pressure", "Heart Rate", "Body Temperature", "Diagnosis"
            }
        ));
        jScrollPane2.setViewportView(tblPatientEncounters);

        btnAddEncounters.setText("Add Encounter");
        btnAddEncounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncountersActionPerformed(evt);
            }
        });

        btnEncounterUpdate.setText("Update");
        btnEncounterUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterUpdateActionPerformed(evt);
            }
        });

        txtAddBloodPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddBloodPressureActionPerformed(evt);
            }
        });

        txtAddBodyTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddBodyTemperatureActionPerformed(evt);
            }
        });

        jLabel14.setText("Encounter Date:");

        jLabel15.setText("Blood Pressure");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Heart Rate");

        jLabel17.setText("Body Temperature:");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Diagnosis:");

        btnViewEncounters.setText("View Encounters");
        btnViewEncounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncountersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnViewPatient)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtName)
                                .addComponent(txtPassword)
                                .addComponent(txtCity)
                                .addComponent(txtCommunity)
                                .addComponent(txtHouse)
                                .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnUpdatePatient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGender)
                            .addComponent(txtBloodPressure)
                            .addComponent(txtHeartRate)
                            .addComponent(txtBodyTemperature)
                            .addComponent(txtDiagnosis)
                            .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addComponent(btnDeletePatient)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAddHeartRate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddEncounterDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAddBloodPressure, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddBodyTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(txtAddDiagnosis))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewEncounters)
                    .addComponent(btnAddEncounters)
                    .addComponent(btnEncounterUpdate))
                .addGap(245, 245, 245))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewPatient)
                            .addComponent(btnDeletePatient)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(btnUpdatePatient)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAddBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(btnViewEncounters))
                    .addComponent(txtAddEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAddBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel18))
                    .addComponent(btnEncounterUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAddHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16))
                    .addComponent(btnAddEncounters))
                .addContainerGap(435, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
       
        int selectedRowIndex = tblPatientView.getSelectedRow();
        
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        
        patientDirectory.removePatient(selectedPatient);
        
        JOptionPane.showMessageDialog(this, "Patient is Deleted");
        
        populatePatientTable();
        
        
        
    }//GEN-LAST:event_btnDeletePatientActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        
         int selectedRowIndex = tblPatientView.getSelectedRow();
        
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row to Update");
            return;
        }
        
         DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        
        txtName.setText(selectedPatient.getName());
        txtPassword.setText(selectedPatient.getPassword());
        txtCity.setText(selectedPatient.getAddress().getCity().getCityName());
        txtCommunity.setText(selectedPatient.getAddress().getCommunity().getCommunityName());
        txtHouse.setText(selectedPatient.getAddress().getHouse().getHouseName());
        txtDateofBirth.setDate(selectedPatient.getDob());
        txtPhone.setText(String.valueOf(selectedPatient.getPhone()));
        txtGender.setText(selectedPatient.getGender());
        
        
        txtEncounterDate.setDate(selectedPatient.getEncounterHistory().getEncounterHistory().get((selectedPatient.getEncounterHistory().getEncounterHistory().size())-1).getEncounterDate());
        txtBloodPressure.setText(String.valueOf(selectedPatient.getEncounterHistory().getEncounterHistory().get((selectedPatient.getEncounterHistory().getEncounterHistory().size())-1).getVitalSigns().getBloodPressure()));
        txtHeartRate.setText(String.valueOf(selectedPatient.getEncounterHistory().getEncounterHistory().get((selectedPatient.getEncounterHistory().getEncounterHistory().size())-1).getVitalSigns().getHeartRate()));
        txtBodyTemperature.setText(String.valueOf(selectedPatient.getEncounterHistory().getEncounterHistory().get((selectedPatient.getEncounterHistory().getEncounterHistory().size())-1).getVitalSigns().getBodyTemperature()));
        txtDiagnosis.setText(selectedPatient.getEncounterHistory().getEncounterHistory().get((selectedPatient.getEncounterHistory().getEncounterHistory().size())-1).getDiagnosis());
        
        
         DefaultTableModel model2 = (DefaultTableModel) tblPatientEncounters.getModel();
         Encounter selectedEncounter = (Encounter) model2.getValueAt(selectedRowIndex, 0);
         
         ArrayList<Encounter> encounters = new ArrayList<Encounter>();
         encounters=selectedPatient.getEncounterHistory().getEncounterHistory();
         
           model2.setRowCount(0);
           
           for(Encounter e : encounters)
                {
                    Object[] row = new Object[5];
                    
                    row[0]=e;
                    row[1]=e.getVitalSigns().getBloodPressure();
                    row[2]=e.getVitalSigns().getHeartRate();
                    row[3]=e.getVitalSigns().getBodyTemperature();
                    row[4]=e.getDiagnosis();
                    
                   
                    
                    model2.addRow(row);
           

                }
        
        
        
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void txtDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiagnosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiagnosisActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed

       int selectedRowIndex = tblPatientView.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
       Patient p = (Patient) model.getValueAt(selectedRowIndex, 0); 
       
       
       p.setName(txtName.getText());
       p.getAddress().getCity().setCityName(txtCity.getText());
       p.getAddress().getCommunity().setCommunityName(txtCommunity.getText());
       p.getAddress().getHouse().setHouseName(txtHouse.getText());
       p.setDob(txtDateofBirth.getDate());
       p.setGender(txtGender.getText());
       p.setPhone(Long.parseLong(txtPhone.getText()));
       
       
       p.getEncounterHistory().getEncounterHistory().get(-1).getVitalSigns().setHeartRate(Integer.parseInt(txtHeartRate.getText()));
       p.getEncounterHistory().getEncounterHistory().get(-1).getVitalSigns().setBloodPressure(Integer.parseInt(txtBloodPressure.getText()));
       p.getEncounterHistory().getEncounterHistory().get(-1).getVitalSigns().setBodyTemperature(Integer.parseInt(txtBodyTemperature.getText()));
       
       p.getEncounterHistory().getEncounterHistory().get(-1).setEncounterDate(txtEncounterDate.getDate());
       
       p.getEncounterHistory().getEncounterHistory().get(-1).setDiagnosis(txtDiagnosis.getText());

       
       
        JOptionPane.showMessageDialog(this, "Patient information is updated.");
        
        populatePatientTable();
        
         txtName.setText("");
        txtPassword.setText("");
        txtCity.setText("");
        txtCommunity.setText("");
        txtHouse.setText("");
        txtDateofBirth.setDate(null);
        txtPhone.setText("");
        txtGender.setText("");
        
        
        txtEncounterDate.setDate(null);
        txtBloodPressure.setText("");
        txtHeartRate.setText("");
        txtBodyTemperature.setText("");
        txtDiagnosis.setText("");
        
        
       
       
       
       
        
       

    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    private void btnAddEncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncountersActionPerformed
        
        int selectedRowIndex = tblPatientView.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
       Patient p = (Patient) model.getValueAt(selectedRowIndex, 0); 
       
       
       
        Date addEncounterDate = txtAddEncounterDate.getDate();
        int addBloodPressure = Integer.parseInt(txtAddBloodPressure.getText());
         int addHeartRate= Integer.parseInt(txtAddHeartRate.getText());
        int  addBodyTemperature = Integer.parseInt(txtAddBodyTemperature.getText());
        
         String addDiagnosis = txtAddDiagnosis.getText();
        
        VitalSigns v = new VitalSigns(addBloodPressure, addHeartRate, addBodyTemperature);
       
        
        Encounter e = new Encounter(v, addEncounterDate, addDiagnosis);
        
        p.getEncounterHistory().getEncounterHistory().add(e);
        
                JOptionPane.showMessageDialog(this, "Encounter information is updated.");

        
        
        populatePatientTable();
        
        
        
        
        
    }//GEN-LAST:event_btnAddEncountersActionPerformed

    private void txtAddBloodPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddBloodPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddBloodPressureActionPerformed

    private void txtAddBodyTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddBodyTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddBodyTemperatureActionPerformed

    private void btnEncounterUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterUpdateActionPerformed
        
         int selectedRowIndex = tblPatientEncounters.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel) tblPatientEncounters.getModel();
       Encounter e= (Encounter) model.getValueAt(selectedRowIndex, 0);
       
       e.getVitalSigns().setBloodPressure(Integer.parseInt(txtAddBloodPressure.getText()));
       e.getVitalSigns().setBodyTemperature(Integer.parseInt(txtAddBodyTemperature.getText()));
       e.getVitalSigns().setHeartRate(Integer.parseInt(txtAddHeartRate.getText()));
       
       e.setDiagnosis(txtAddDiagnosis.getText());
       
       e.setEncounterDate(txtAddEncounterDate.getDate());
       
       
       
       populatePatientTable();
       
       
       
       
       
       
       
        
    }//GEN-LAST:event_btnEncounterUpdateActionPerformed

    private void btnViewEncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncountersActionPerformed
        int selectedRowIndex = tblPatientEncounters.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel) tblPatientEncounters.getModel();
       Encounter selectedPatient= (Encounter) model.getValueAt(selectedRowIndex, 0);
       
       
       txtAddBloodPressure.setText(String.valueOf(selectedPatient.getVitalSigns().getBloodPressure()));
       txtAddBodyTemperature.setText(String.valueOf(selectedPatient.getVitalSigns().getBodyTemperature()));
       txtAddHeartRate.setText(String.valueOf(selectedPatient.getVitalSigns().getHeartRate()));
       
       
       txtAddDiagnosis.setText(String.valueOf(selectedPatient.getDiagnosis()));
       txtAddEncounterDate.setDate(selectedPatient.getEncounterDate());
               
       
       
    }//GEN-LAST:event_btnViewEncountersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEncounters;
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnEncounterUpdate;
    private javax.swing.JButton btnUpdatePatient;
    private javax.swing.JButton btnViewEncounters;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPatientEncounters;
    private javax.swing.JTable tblPatientView;
    private javax.swing.JTextField txtAddBloodPressure;
    private javax.swing.JTextField txtAddBodyTemperature;
    private javax.swing.JTextField txtAddDiagnosis;
    private com.toedter.calendar.JDateChooser txtAddEncounterDate;
    private javax.swing.JTextField txtAddHeartRate;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtBodyTemperature;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private com.toedter.calendar.JDateChooser txtDateofBirth;
    private javax.swing.JTextField txtDiagnosis;
    private com.toedter.calendar.JDateChooser txtEncounterDate;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    private void populatePatientTable() {
        
        
                DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
                  
                model.setRowCount(0);
                
                for(Patient p : patientDirectory.getPatientDirectory())
                {
                    Object[] row = new Object[7];
                    row[0]=p;
                    row[1]=p.getAddress().getCity().getCityName();
                    row[2]=p.getAddress().getCommunity().getCommunityName();
                    row[3]=p.getAddress().getHouse().getHouseName();
                    row[4]=p.getDob();
                    row[5]=p.getGender();
                    
                    row[6]=p.getPhone();
                    
                    model.addRow(row);
                    
                    
                }
                
                
                
                
                

    }
}
